/// –≠–∫—Ä–∞–Ω "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", –≠–û–ü
library;

import 'package:external_app_launcher/external_app_launcher.dart';
import 'package:flutter/material.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:super_bullet_list/bullet_list.dart';
import 'package:super_bullet_list/bullet_style.dart';
import 'package:url_launcher/url_launcher.dart';

import '/widgets/gradient_appbar.dart';

class AppInfo extends StatelessWidget {
  const AppInfo({super.key});

  launchURL() async {
    // const url = 'geo:55.755848,37.620409';
    Uri url = Uri.parse('geo:');
    // Uri url = Uri.parse('geo:55.755848,37.620409');
    // Uri url = Uri.parse('https://yandex.ru/legal/maps_termsofuse/');
    if (await launchUrl(url)) {
      await launchUrl(url);
    } else {
      throw 'Could not launch $url';
    }
  }

  @override
  Widget build(BuildContext context) {
    print('=== –ú–°–ë –≠–û–ü!!! ===');

    final cScheme = Theme.of(context).colorScheme;
    final tTheme = Theme.of(context).textTheme;

    Widget topicText(String data) => Text(
          data,
          style: TextStyle(color: cScheme.tertiary),
        );

    final List<Widget> topics = [
      topicText('–ö–æ–ª–ª–µ–∫—Ü–∏—è "100 –ú–µ—Å—Ç", –≤–µ—Ä—Å–∏—è 0.1.0'),
      topicText('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è —Å–±–æ—Ä–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Ç–µ—Ö —Å–∞–º—ã—Ö –º–µ—Å—Ç, –ø—Ä–µ–±—ã–≤–∞–Ω–∏–µ –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–∏–∑–≤–µ–ª–æ –Ω–∞ –≤–∞—Å –Ω–µ–∏–∑–≥–ª–∞–¥–∏–º–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.'),
      topicText('–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–ª–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.'),
      topicText('–¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ—å–ª–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è". –õ—É—á—à–µ –≤—Å–µ–≥–æ —Ö—Ä–∞–Ω–∏—Ç—å –ú–µ—Å—Ç–∞ –Ω–µ –±–æ–ª–µ–µ 30 –¥–Ω–µ–π.'),
      Wrap(
        children: [
          topicText('–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ä—Ç–∞ –Ø–Ω–¥–µ–∫—Å–∞ –≤ —Å—Ç—Ä–æ–≥–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å'),
          topicText('–ø—Ä–∏–Ω—è—Ç—ã–º–∏ '),
          InkWell(
            child: Text('—É—Å–ª–æ–≤–∏—è–º–∏.',
                style: TextStyle(
                  color: cScheme.primaryContainer,
                  decoration: TextDecoration.underline,
                )),
            onTap: () async {
              await LaunchApp.openApp(
                androidPackageName: 'ru.nspk.mirpay',
                appStoreLink: 'https://www.rustore.ru/catalog/app/ru.nspk.mirpay',
                openStore: true,
              );
            },
            // onTap: () => launchURL(),
          )
        ],
      ),
    ];

    return Scaffold(
        appBar: AppBar(
          title: const Text('–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'),
          flexibleSpace: const GradientAppBar(),
        ),
        body: Center(
            child: Column(
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                Positioned(
                    child: Text(
                  '100',
                  textScaleFactor: 1,
                  style: tTheme.displayLarge!.copyWith(
                    color: cScheme.primaryContainer.withOpacity(.9),
                  ),
                ).animate().fadeIn(duration: 2.seconds).scale(
                          duration: 2.seconds,
                          curve: Curves.easeOutBack,
                        )),
                Positioned(
                    top: 50,
                    child: Padding(
                        padding: const EdgeInsets.only(left: 15.0),
                        child: Text('–º–µ—Å—Ç',
                            textScaleFactor: 7.5,
                            style: tTheme.titleMedium!.copyWith(
                              color: cScheme.background,
                              fontWeight: FontWeight.w900,
                            )).animate().fadeIn(duration: 3.seconds)))
              ],
            ),
            Expanded(
                child: Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 45),
                    child: SizedBox(
                      child: SuperBulletList(
                        isOrdered: false,
                        style: BulletStyle.discFill,
                        iconColor: cScheme.tertiary,
                        iconSize: 5,
                        // customBullet: const Text('üî•'),
                        gap: 10,
                        items: topics,
                      )
                          .animate(delay: 1.seconds)
                          .fadeIn(
                            duration: 900.ms,
                            delay: 300.ms,
                          )
                          .shimmer(
                            duration: 1.seconds,
                            blendMode: BlendMode.srcOver,
                            color: Colors.white12,
                          )
                          .move(
                            begin: const Offset(-30, 0),
                            curve: Curves.easeOutQuad,
                          ),
                    )))
          ],
        )));
  }
}
